git 最早是为了管理linux代码
git是个分布式的版本控制系统。不是cvs svn 那样的集中式的

在当前目录 git bush 窗口  用git init 命令 创建一个仓库
把文件放进去，  git add  aa.txt  添加文件  可以连续添加多个
git commit -m "aaaa"  提交文件
git commit 如果没有-m 会跳到另一个界面 输入提交的信息，和linux修改文本操作一致。
这么做是为了 -m的信息太多到多行的时候用， 也就是单独的界面输入log信息。

git log 查看历史记录
git log --pretty=oneline 查看简洁的log  显示一行,如果只是想显示部分，用-2 表示 2条

git config --global gui.encoding utf-8   可以设置多个编码    当单个替换多个的时候用--replace-all
git 的参数 都是用两个--

git diff 查看文件的修改， -表示以前的 +表示修改后的   一旦git add了修改的文件，就不能直接用git diff 查看区别了

cat git.txt 查看文件

git reset 回复版本，指针回复到某个位置，之后的修改都没了。
git reset --hard HEAD^
git reset --hard head~100
git reset --hard 3628164  commit id 的前几个数

git reflog 查看以往的操作记录  在最前面一列显示了每次操作对应的commit id， 只有能产生commit id 操作

git 工作区和暂存区，我们的目录就是工作区，git add（stage）  添加到暂存区，  git commit 将暂存区提交到分支（master）
管理修改：先添加到暂存区，然后提交到分支
撤销修改：git checkout -- file  丢弃工作区的修改
修改有两种情况：

一种是修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

一种是 已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区, 是退回到工作区 然后就可以checkout 撤销工作区的修改，一切都干净了
git reset head git.txt  head 表示最新版本

如果从暂存区提交到了版本库，可用reset 版本退回。这是对于本地的操作，如果把本地版本推到远程，怎么弄等待下文吧

删除文件：先删掉文件 rm  然后提交到stage,  git rm test.txt 或者 git add   然后提交 git commit
如果误删，直接checkout 获得最新的版本就好了

测试push
git remote add origin https://github.com/laoma102/FirstGit.git
git push -u origin master

SSH地址：git@github.com:laoma102/FirstGit.git

从远程仓库获得版本库：git clone git@github.com:michaelliao/gitskills.git  用git clone